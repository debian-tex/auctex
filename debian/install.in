#include "variables"
#!/bin/bash -e
#
# elisp install file for Debian <:=${PACKAGE}:> package.
# $Id: install.in,v 1.21 2004/08/27 14:47:22 salve Exp $
#
<:=@COPYRIGHT:>//

set -o posix

<:# parse debconf database:>//
source <:=${CONFMODULE}:>
db_version 2.0
db_get <:=${PACKAGE}:>/logfile || true; _db_logfile=${RET}
db_get <:=${PACKAGE}:>/default || true; _db_default=${RET}
db_get <:=${PACKAGE}:>/doauto || true; _db_doauto=${RET}
db_get <:=${PACKAGE}:>/doautofg || true; _db_doautofg=${RET}

FLAVOR=${1}

INSTALL="install -o root -g root"
INSTDIR="${INSTALL} -m 755 -d"

do_install () {
    echo >&2 -n "install/<:=${PACKAGE}:>: Setting up for ${FLAVOR}... "
    cd <:=${lisp}:>; umask 0022;
    ${INSTDIR} <:=if($_=${lisp})=~s|emacs|\${FLAVOR}|:>
    echo ";; This directory should not be autoloaded." \
	> <:=if($_=${lisp})=~s|emacs|\${FLAVOR}|:>/.nosearch
    ./configure --prefix=<:=${usr}:> --with-emacs=${FLAVOR} \
	--with-lispdir=<:$_=${lisp}; $_=~s|/+${PACKAGE}/*|/|;
			 $_=~s|emacs|\${FLAVOR}|; print:> \
	--with-auto-dir=<:=${var}:>/${FLAVOR} \
	>> <:=if($_=${lisp})=~s|emacs|\${FLAVOR}|:>/<:=${ELCLOG}:> 2>&1
    make INSTALL="${INSTALL}" MKINSTALLDIRS="${INSTDIR}" \
	install-lisp install-contrib \
	>> <:=if($_=${lisp})=~s|emacs|\${FLAVOR}|:>/<:=${ELCLOG}:> 2>&1
    make distclean \
	>> <:=if($_=${lisp})=~s|emacs|\${FLAVOR}|:>/<:=${ELCLOG}:> 2>&1
    find <:=if($_=${lisp})=~s|emacs|\${FLAVOR}|:> -type f -name \*.el \
	-print0 | xargs --null rm -f dummy \
	>> <:=if($_=${lisp})=~s|emacs|\${FLAVOR}|:>/<:=${ELCLOG}:> 2>&1
    gzip -9fq <:=if($_=${lisp})=~s|emacs|\${FLAVOR}|:>/<:=${ELCLOG}:>
    echo -e ><:=if($_="${sstartd}/${EPRIORITY}${PACKAGE}.el")
	       =~s|emacs|\${FLAVOR}|:> \
	";;; This file is automatically generated.\n"
    echo -e >><:=if($_="${sstartd}/${EPRIORITY}${PACKAGE}.el")
	     =~s|emacs|\${FLAVOR}|:> \
	"(if (fboundp 'debian-pkg-add-load-path-item)\n" \
	"   (progn (debian-pkg-add-load-path-item \"<:=if($_=${lisp})
		 =~s|emacs|\${FLAVOR}|:>\")\n" \
	"          (debian-pkg-add-load-path-item \"<:=${lisp}:>\"))\n" \
	" (progn (add-to-list 'load-path \"<:=if($_=${lisp})
		 =~s|emacs|\${FLAVOR}|:>\" 'append)\n" \
	"        (add-to-list 'load-path \"<:=${lisp}:>\" 'append)))"
    if [ "${_db_default}" = "true" ]; then
	echo -e >><:=if($_="${sstartd}/${EPRIORITY}${PACKAGE}.el")
		    =~s|emacs|\${FLAVOR}|:> \
	"\n(require 'tex-site)"
    fi
    echo >&2 "done."
    return 0
}

do_auto () {
    case "${_db_doauto}" in
	(Foreground)
	case "${_db_doautofg}" in
	    (Console)
	    rm -f ${_db_logfile}
	    <:="${sbin}/${UPDATE_ELISP}":> ${FLAVOR} ;;
	    (File)
	    echo >&2 -n "<:=${UPDATE_ELISP}:>: "
	    echo >&2 "Further output will appear in: ${_db_logfile}."
	    echo >&2 -n "<:=${PACKAGE}:>: "
	    echo >&2 -n "Waiting for <:=${UPDATE_ELISP}:> to terminate... "
	    <:="${sbin}/${UPDATE_ELISP}":> ${FLAVOR} >> ${_db_logfile} 2>&1
	    echo >&2 "done." ;;
	    (*) echo >&2 \
		"${0##*/}: Debconf passed unknown value \`${_db_doautofg}'." ;;
	esac ;;
	(Background)
	# Closing fd 3 is debconf important.
	<:# debconf\'s frontend wait for its standard input to be closed:>//
	<:# before dying, and that means fd 3:>//
	<:# better don\'t close fd 0: emacs doesn\'t take it very well:>//
	<:# WARNING: DON\'T CLOSE FD\'S TO BE WRITTEN TO!:>//
	<:# WARNING: DON\'T CLOSE FD\'S TO BE READ TO!:>//
	<:="${sbin}/${UPDATE_ELISP}":> ${FLAVOR} >> ${_db_logfile} 2>&1 3>&- &
	echo >&2 -n "<:=${UPDATE_ELISP}:>[${!}]: "
	echo >&2 "Further output will appear in: ${_db_logfile}." ;;
	(None) rm -f ${_db_logfile} ;;
	(*) echo >&2 \
	    "${0##*/}: Debconf passed unknown value \`${_db_doauto}'." ;;
    esac
    return 0
}

case "${FLAVOR}" in
    (emacs) : ;;
    (emacs21|emacs-snapshot)
    <:# install:>//
    do_install ${FLAVOR}
    <:# parse TeX macros and LaTeX styles:>//
    do_auto ${FLAVOR} ;;
    (*) echo >&2 "install/<:=${PACKAGE}:>: Ignoring emacsen flavor ${FLAVOR}." ;;
esac

exit 0
<:
# Local Variables:
# mode: shell-script
# End:
:>//
