Installation of AUCTeX is a bit more complicated, but we are working to
resolve the issues involved. Please report success/failure to us at
`auc-tex@sunsite.dk'. Here are the steps to perform:

  1. The installation of AUCTeX will require the MSYS tool set from
     `http://www.mingw.org'. If you have the Cygwin tool set from
     `http://cygwin.com' installed, that should do just fine as well,
     but it is quite larger and slower.

     If you are installing AUCTeX with one of those sets for an Emacs
     compiled in a different one, you should try to avoid tool-specific
     path names like `/cygwin/c'.  Instead, use the `c:' syntax.  It
     might also help to use forward slashes instead of the backward
     slashes more typical for MS Windows: while backward slashes are
     supposed to work if properly escaped in the shell, this is one
     area easily overlooked by the developers.  The same holds for file
     or directory names with spaces in them.  Of course, we want to
     hear about any problems in that area.

     Compiling Emacs is outside of the scope of this manual.  AUCTeX
     itself does not require a C compiler for installation.

  2. Install GNU Emacs from `http://ftp.gnu.org/pub/gnu/windows/emacs/'
     or XEmacs from `http://www.xemacs.org'.

  3. You need a working TeX installation.  One popular installation
     under Windows is MikTeX (http://www.miktex.org).  Another much more
     extensive system is TeX live (http://www.tug.org/texlive) which is
     rather close to its Unix cousins.

  4. Now the fun stuff starts. Unpack the AUCTeX distribution into some
     installation directory. *Do not* unpack it right into your Emacs'
     own directories: the installation will copy the material that
     needs to be placed there. Keep the installation directory
     separate: you can remove its contents after installation
     completes. Since you are reading this, you probably have already
     unpacked AUCTeX, but it should still be easy to move it elsewhere
     now.

  5. Ready for takeoff. Start some shell (typically `bash') capable of
     running `configure', change into the installation directory and
     call `./configure' with appropriate options.

     Typical options you'll want to specify will be
    `--prefix=DRIVE:/PATH/TO/EMACS-DIRECTORY'
          which makes sure that (1) the AUCTeX manual will be installed
          in the `info/' directory of your Emacs installation and (2)
          the automatically generated global style hooks will be
          installed in the `var/' directory of your Emacs installation.
          If you are collecting stuff like that in a central directory
          hierarchy (not untypical with Cygwin), you might want to
          specify that here instead.  You stand a good chance that this
          will be the only option you need to supply, as long as your
          TeX-related executables are in your system path, which they
          better be for AUCTeX's operation, anyway.

    `--with-emacs'
          if you are installing for a version of Emacs.  You can use
          `--with-emacs=/PATH/TO/EMACS' to specify the name of the
          installed Emacs executable, complete with its path if
          necessary (if Emacs is not within a directory specified in
          your PATH environment setting).

    `--with-xemacs'
          if you are installing for a version of XEmacs.  Again, you
          can use `--with-xemacs=/PATH/TO/XEMACS' to specify the name
          of the installed XEmacs executable complete with its path if
          necessary.  It may also be necessary to specify this option
          if a copy of Emacs is found in your PATH environment setting,
          but you still would like to install a copy of AUCTeX for
          XEmacs.

    `--with-lispdir=/DIR'
          This may be needed for GNU Emacs installation, but hopefully
          `configure' should figure this out by itself. Don't use this
          for XEmacs, rather use

    `--with-packagedir=/DIR'
          which gives the location of the package directory for XEmacs
          where stuff should be installed. Again, hopefully this is not
          necessary to specify.

    `--with-tex-input-dirs="/DIR-1/;/DIR-2/;...;/DIR-N/"'
          This option allows to specify the directories to be used for
          file searches, e.g. for completion of LaTeX or BibTeX style
          file names.  They will be used in the variable
          `TeX-macro-global'.

          `configure' will usually figure out the right value for this
          option but will only succeed if it finds the necessary
          programs of the TeX system in the system path.  Which should
          be there for running AUCTeX, anyway.

    `--with-auto-dir=/DIR'
          Directory containing automatically generated information.
          You should not normally need to set this, as `--prefix'
          should take care of this.

     Some additional information about the above options may be found in
     the `Configure' section in the `INSTALL' file.

  6. If you need to use the prebuilt documentation (see above), now is
     the time to unpack it over the rest of the installation directory.

  7. Run `make' in the installation directory (we have had one report
     that Emacs did not manage to byte compile the Elisp files, and
     that had to be done by hand.  No idea about what might have gone
     wrong there).

  8. Run `make install' in the installation directory.

  9. For GNU Emacs, the recommended way to activate AUCTeX is to add the
     following line to your `.emacs' file:

          (require 'tex-site)

     The configuration for Windows systems is probably not quite
     fitting.  Instead of loading `tex-site.el' in that manner, you
     might want to load `tex-mik.el' (for MikTeX) or `tex-fptex' (for
     fpTeX) instead.  Those will lead to somewhat more appropriate
     values for your system.  You can always use

            M-x customize-group <RET> AUCTeX <RET>

     in order to customize more stuff, or use the `Customize' menu.

 10. Load a `.tex' file Emacs or XEmacs and see if you get the
     `Command' menu. Try using that to LaTeX the file.

        Well, that about is all.  Have fun!

